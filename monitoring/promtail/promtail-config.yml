server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: teknofest

scrape_configs:
  # Docker container logs
  - job_name: containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: containerlogs
          __path__: /var/lib/docker/containers/*/*log
    
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            time: time
            container_name: attrs.tag
      
      - regex:
          expression: '^(?P<container_name>[\w-]+)'
          source: container_name
      
      - labels:
          container_name:
          stream:
      
      - timestamp:
          format: RFC3339Nano
          source: time
      
      - output:
          source: output

  # Application logs
  - job_name: teknofest
    static_configs:
      - targets:
          - localhost
        labels:
          job: teknofest
          __path__: /var/log/teknofest/*.log
    
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}'
          max_wait_time: 3s
      
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?P<level>\w+) - (?P<logger>\S+) - (?P<message>.*)'
      
      - labels:
          level:
          logger:
      
      - timestamp:
          format: '2006-01-02 15:04:05,000'
          source: timestamp
      
      - output:
          source: message

  # System logs
  - job_name: syslog
    syslog:
      listen_address: 0.0.0.0:514
      listen_protocol: tcp
      idle_timeout: 60s
      label_structured_data: true
      labels:
        job: "syslog"
    
    relabel_configs:
      - source_labels: ['__syslog_message_hostname']
        target_label: 'host'
      - source_labels: ['__syslog_message_severity']
        target_label: 'severity'
      - source_labels: ['__syslog_message_facility']
        target_label: 'facility'
      - source_labels: ['__syslog_message_app_name']
        target_label: 'app'

  # Nginx access logs
  - job_name: nginx
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          __path__: /var/log/nginx/access.log
    
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>[\d\.]+) - (?P<remote_user>[^\s]+) \[(?P<time_local>[^\]]+)\] "(?P<method>\w+) (?P<path>[^\s]+) (?P<protocol>[^"]+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
      
      - labels:
          method:
          status:
          path:
      
      - metrics:
          http_nginx_response_bytes_total:
            type: Counter
            description: "Total bytes sent"
            source: body_bytes_sent
            config:
              action: add
          
          http_nginx_requests_total:
            type: Counter
            description: "Total requests"
            config:
              action: inc
      
      - timestamp:
          format: '02/Jan/2006:15:04:05 -0700'
          source: time_local

  # PostgreSQL logs
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          __path__: /var/log/postgresql/*.log
    
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}'
      
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+):  (?P<message>.*)'
      
      - labels:
          level:
      
      - timestamp:
          format: '2006-01-02 15:04:05.000 MST'
          source: timestamp