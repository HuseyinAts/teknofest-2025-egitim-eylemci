# Model Versioning System Configuration
# Production-ready ML model management settings

# Model Registry Settings
registry:
  storage:
    local_path: "./models"
    s3_bucket: "teknofest-models"  # Optional: S3 bucket for model storage
    s3_region: "eu-central-1"
    max_model_size_mb: 5000
    
  mlflow:
    tracking_uri: "http://localhost:5000"  # Optional: MLflow tracking server
    experiment_name: "teknofest-education"
    
  huggingface:
    organization: "teknofest-2025"
    private: true
    
  retention:
    keep_versions: 10
    keep_days: 90
    archive_old_versions: true
    
# Deployment Configuration
deployment:
  default_strategy: "canary"
  
  strategies:
    immediate:
      enabled: true
      
    canary:
      enabled: true
      initial_percentage: 10
      increment_percentage: 10
      increment_interval_minutes: 30
      
    blue_green:
      enabled: true
      switch_delay_seconds: 60
      
    gradual:
      enabled: true
      initial_percentage: 5
      target_percentage: 100
      rollout_duration_minutes: 120
      
    a_b_test:
      enabled: true
      min_duration_hours: 24
      max_duration_hours: 168  # 7 days
      
  health_check:
    enabled: true
    interval_seconds: 30
    timeout_seconds: 10
    failure_threshold: 3
    success_threshold: 2
    
  auto_rollback:
    enabled: true
    error_rate_threshold: 0.1  # 10% error rate
    latency_threshold_ms: 1000
    min_requests: 100
    lookback_minutes: 5
    
# Model Types and Frameworks
models:
  supported_frameworks:
    - pytorch
    - tensorflow
    - sklearn
    - xgboost
    - huggingface
    - custom
    
  types:
    content_generation:
      framework: huggingface
      default_model: "Huseyin/teknofest-2025-turkish-edu-v2"
      fallback_models:
        - "ytu-ce-cosmos/turkish-gpt2-large"
        - "google/gemma-2b"
      max_length: 2048
      temperature: 0.7
      
    question_answering:
      framework: huggingface
      default_model: "savasy/bert-turkish-qa"
      max_length: 512
      
    assessment:
      framework: sklearn
      model_path: "models/assessment/latest"
      
    recommendation:
      framework: tensorflow
      model_path: "models/recommendation/latest"
      
# Performance Monitoring
monitoring:
  metrics:
    enabled: true
    prometheus_port: 9090
    
  thresholds:
    latency:
      p50_ms: 100
      p95_ms: 500
      p99_ms: 1000
      
    success_rate:
      min_percentage: 95
      
    throughput:
      min_rps: 10
      
  alerts:
    enabled: true
    channels:
      - email
      - slack
    
    rules:
      - name: "High Error Rate"
        condition: "error_rate > 0.05"
        severity: "critical"
        
      - name: "High Latency"
        condition: "p95_latency > 1000"
        severity: "warning"
        
      - name: "Model Drift"
        condition: "drift_score > 0.3"
        severity: "warning"
        
# A/B Testing Configuration
ab_testing:
  enabled: true
  
  traffic_split:
    method: "weighted_random"  # or "hash_based", "user_based"
    
  metrics_collection:
    - success_rate
    - latency
    - user_satisfaction
    - conversion_rate
    
  statistical_tests:
    confidence_level: 0.95
    min_sample_size: 1000
    
# Model Validation
validation:
  pre_deployment:
    enabled: true
    
    checks:
      - name: "Model Size Check"
        max_size_mb: 1000
        
      - name: "Latency Test"
        max_latency_ms: 500
        test_samples: 100
        
      - name: "Accuracy Test"
        min_accuracy: 0.8
        test_dataset: "validation"
        
      - name: "Memory Usage"
        max_memory_mb: 2000
        
  post_deployment:
    enabled: true
    duration_minutes: 60
    
    checks:
      - name: "Live Performance"
        min_success_rate: 0.95
        
      - name: "Resource Usage"
        max_cpu_percent: 80
        max_memory_percent: 80
        
# Security and Compliance
security:
  model_signing:
    enabled: true
    algorithm: "RSA-SHA256"
    
  access_control:
    enabled: true
    
    roles:
      admin:
        - deploy
        - rollback
        - delete
        - export
        
      developer:
        - register
        - promote
        - compare
        - view
        
      viewer:
        - view
        - metrics
        
  audit_logging:
    enabled: true
    retention_days: 365
    
  compliance:
    gdpr_compliant: true
    data_anonymization: true
    
# Backup and Recovery
backup:
  enabled: true
  
  schedule:
    frequency: "daily"
    time: "02:00"
    
  destinations:
    - type: "s3"
      bucket: "teknofest-backups"
      retention_days: 30
      
    - type: "local"
      path: "/backup/models"
      retention_days: 7
      
  recovery:
    test_frequency: "weekly"
    rto_minutes: 60  # Recovery Time Objective
    rpo_minutes: 240  # Recovery Point Objective
    
# Integration Settings
integrations:
  github:
    enabled: true
    auto_tag_releases: true
    
  docker:
    enabled: true
    registry: "docker.io/teknofest"
    auto_build: true
    
  kubernetes:
    enabled: true
    namespace: "ml-models"
    auto_deploy: false
    
  ci_cd:
    enabled: true
    pipeline: "jenkins"
    auto_test: true
    
# Experimental Features
experimental:
  federated_learning:
    enabled: false
    
  model_compression:
    enabled: true
    methods:
      - quantization
      - pruning
      
  edge_deployment:
    enabled: false
    
  auto_ml:
    enabled: false
    
# Notification Settings
notifications:
  email:
    enabled: true
    smtp_host: "smtp.gmail.com"
    smtp_port: 587
    from: "noreply@teknofest.com"
    
  slack:
    enabled: true
    webhook_url: "${SLACK_WEBHOOK_URL}"
    
  events:
    - deployment_success
    - deployment_failure
    - rollback_triggered
    - model_drift_detected
    - performance_degradation