global
    maxconn 4096
    log stdout local0
    log stdout local1 notice
    daemon
    stats socket /var/run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    tune.ssl.default-dh-param 2048
    
    # Performance tuning
    tune.bufsize 32768
    tune.maxrewrite 1024
    tune.h2.initial-window-size 65536
    
    # SSL/TLS settings
    ssl-default-bind-ciphers ECDHE+AESGCM:ECDHE+AES256:ECDHE+AES128:!PSK:!DHE:!RSA:!DSS:!aNull:!MD5
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-default-server-ciphers ECDHE+AESGCM:ECDHE+AES256:ECDHE+AES128:!PSK:!DHE:!RSA:!DSS:!aNull:!MD5
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option forwardfor except 127.0.0.0/8
    option redispatch
    option contstats
    
    # Timeouts
    timeout connect 5000ms
    timeout client 30000ms
    timeout server 30000ms
    timeout http-request 10000ms
    timeout http-keep-alive 5000ms
    timeout check 5000ms
    timeout queue 30000ms
    
    # Error handling
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

# ==========================================
# STATISTICS
# ==========================================
listen stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats show-node
    stats show-legends
    stats show-desc TEKNOFEST 2025 Load Balancer
    stats auth admin:admin

# ==========================================
# FRONTEND - HTTP
# ==========================================
frontend http_front
    bind *:80
    
    # ACLs
    acl is_api path_beg /api
    acl is_websocket hdr(Upgrade) -i WebSocket
    acl is_health path_beg /health
    acl is_metrics path /metrics
    acl is_static path_beg /static /media /_next
    acl is_admin path_beg /admin
    acl is_flower path_beg /flower
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny if { sc_http_req_rate(0) gt 100 }
    
    # Security headers
    http-response set-header X-Frame-Options "SAMEORIGIN"
    http-response set-header X-Content-Type-Options "nosniff"
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
    
    # Request ID
    unique-id-format %{+X}o\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid
    unique-id-header X-Request-ID
    
    # Compression
    compression algo gzip
    compression type text/html text/plain text/css text/javascript application/javascript application/json
    
    # Routing
    use_backend backend_websocket if is_websocket
    use_backend backend_static if is_static
    use_backend backend_health if is_health
    use_backend backend_metrics if is_metrics
    use_backend backend_admin if is_admin
    use_backend backend_flower if is_flower
    use_backend backend_api if is_api
    default_backend backend_frontend

# ==========================================
# FRONTEND - HTTPS
# ==========================================
frontend https_front
    bind *:443 ssl crt /etc/ssl/certs/teknofest.pem alpn h2,http/1.1
    
    # HTTP/2 support
    http-request set-header X-Forwarded-Proto https
    
    # ACLs (same as HTTP)
    acl is_api path_beg /api
    acl is_websocket hdr(Upgrade) -i WebSocket
    acl is_health path_beg /health
    acl is_metrics path /metrics
    acl is_static path_beg /static /media /_next
    acl is_admin path_beg /admin
    acl is_flower path_beg /flower
    
    # HSTS
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    
    # Routing (same as HTTP)
    use_backend backend_websocket if is_websocket
    use_backend backend_static if is_static
    use_backend backend_health if is_health
    use_backend backend_metrics if is_metrics
    use_backend backend_admin if is_admin
    use_backend backend_flower if is_flower
    use_backend backend_api if is_api
    default_backend backend_frontend

# ==========================================
# BACKEND - API SERVERS
# ==========================================
backend backend_api
    balance leastconn
    option httpchk GET /health/ready HTTP/1.1\r\nHost:\ localhost
    
    # Stick sessions for stateful operations
    cookie SERVERID insert indirect nocache
    
    # Circuit breaker
    option redispatch
    retries 3
    
    # Connection pooling
    http-reuse safe
    
    # Load balancing algorithm with weights
    server api1 api:8000 check weight 100 maxconn 100 cookie api1 observe layer7 error-limit 10 on-error mark-down
    server api2 api:8000 check weight 100 maxconn 100 cookie api2 observe layer7 error-limit 10 on-error mark-down
    server api3 api:8000 check weight 100 maxconn 100 cookie api3 observe layer7 error-limit 10 on-error mark-down
    server api4 api:8000 check weight 100 maxconn 100 cookie api4 observe layer7 error-limit 10 on-error mark-down
    
    # Backup servers
    server api_backup1 api:8000 backup check weight 50 maxconn 50
    server api_backup2 api:8000 backup check weight 50 maxconn 50

# ==========================================
# BACKEND - WEBSOCKET
# ==========================================
backend backend_websocket
    balance source
    option http-server-close
    option forceclose
    
    # WebSocket specific settings
    timeout tunnel 3600s
    timeout client-fin 60s
    
    server ws1 api:8000 check weight 100 maxconn 1000
    server ws2 api:8000 check weight 100 maxconn 1000
    server ws3 api:8000 check weight 100 maxconn 1000
    server ws4 api:8000 check weight 100 maxconn 1000

# ==========================================
# BACKEND - FRONTEND APPLICATION
# ==========================================
backend backend_frontend
    balance roundrobin
    option httpchk GET /api/health HTTP/1.1\r\nHost:\ localhost
    
    # Cache headers for static assets
    http-response set-header Cache-Control "public, max-age=31536000" if { path_end .js .css .png .jpg .jpeg .gif .ico .woff .woff2 }
    
    server frontend1 frontend:3000 check weight 100 maxconn 100
    server frontend2 frontend:3000 check weight 100 maxconn 100

# ==========================================
# BACKEND - STATIC FILES
# ==========================================
backend backend_static
    balance roundrobin
    
    # Aggressive caching for static files
    http-response set-header Cache-Control "public, max-age=31536000, immutable"
    http-response set-header Vary "Accept-Encoding"
    
    server static1 frontend:3000 check weight 100
    server static2 frontend:3000 check weight 100

# ==========================================
# BACKEND - HEALTH CHECKS
# ==========================================
backend backend_health
    balance roundrobin
    
    # No authentication required for health checks
    http-request del-header Authorization
    
    server health1 api:8000 check
    server health2 api:8000 check
    server health3 api:8000 check
    server health4 api:8000 check

# ==========================================
# BACKEND - METRICS
# ==========================================
backend backend_metrics
    balance roundrobin
    
    # Metrics endpoint
    server metrics1 api:8000 check
    server metrics2 api:8000 check

# ==========================================
# BACKEND - ADMIN
# ==========================================
backend backend_admin
    balance source
    
    # Stick sessions for admin
    cookie ADMINID insert indirect nocache
    
    # Additional security for admin
    http-request deny unless { src 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16 127.0.0.1 }
    
    server admin1 api:8000 check cookie admin1
    server admin2 api:8000 check cookie admin2

# ==========================================
# BACKEND - FLOWER (Celery Monitoring)
# ==========================================
backend backend_flower
    balance source
    
    server flower1 celery-flower:5555 check